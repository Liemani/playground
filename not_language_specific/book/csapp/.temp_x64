
prog:	file format mach-o 64-bit x86-64

Disassembly of section __TEXT,__text:

0000000100003ef0 <_main>:
100003ef0: 55                          	pushq	%rbp
100003ef1: 48 89 e5                    	movq	%rsp, %rbp
100003ef4: 48 83 ec 10                 	subq	$16, %rsp
100003ef8: c7 45 fc 00 00 00 00        	movl	$0, -4(%rbp)
100003eff: bf 02 00 00 00              	movl	$2, %edi
100003f04: be 03 00 00 00              	movl	$3, %esi
100003f09: 48 8d 55 f0                 	leaq	-16(%rbp), %rdx
100003f0d: e8 3e 00 00 00              	callq	0x100003f50 <_multstore>
100003f12: 48 8b 75 f0                 	movq	-16(%rbp), %rsi
100003f16: 48 8d 3d 89 00 00 00        	leaq	137(%rip), %rdi         ## 0x100003fa6 <dyld_stub_binder+0x100003fa6>
100003f1d: b0 00                       	movb	$0, %al
100003f1f: e8 62 00 00 00              	callq	0x100003f86 <dyld_stub_binder+0x100003f86>
100003f24: 31 c0                       	xorl	%eax, %eax
100003f26: 48 83 c4 10                 	addq	$16, %rsp
100003f2a: 5d                          	popq	%rbp
100003f2b: c3                          	retq
100003f2c: 0f 1f 40 00                 	nopl	(%rax)

0000000100003f30 <_mult2>:
100003f30: 55                          	pushq	%rbp
100003f31: 48 89 e5                    	movq	%rsp, %rbp
100003f34: 48 89 7d f8                 	movq	%rdi, -8(%rbp)
100003f38: 48 89 75 f0                 	movq	%rsi, -16(%rbp)
100003f3c: 48 8b 45 f8                 	movq	-8(%rbp), %rax
100003f40: 48 0f af 45 f0              	imulq	-16(%rbp), %rax
100003f45: 48 89 45 e8                 	movq	%rax, -24(%rbp)
100003f49: 48 8b 45 e8                 	movq	-24(%rbp), %rax
100003f4d: 5d                          	popq	%rbp
100003f4e: c3                          	retq
100003f4f: 90                          	nop

0000000100003f50 <_multstore>:
100003f50: 55                          	pushq	%rbp
100003f51: 48 89 e5                    	movq	%rsp, %rbp
100003f54: 48 83 ec 20                 	subq	$32, %rsp
100003f58: 48 89 7d f8                 	movq	%rdi, -8(%rbp)
100003f5c: 48 89 75 f0                 	movq	%rsi, -16(%rbp)
100003f60: 48 89 55 e8                 	movq	%rdx, -24(%rbp)
100003f64: 48 8b 7d f8                 	movq	-8(%rbp), %rdi
100003f68: 48 8b 75 f0                 	movq	-16(%rbp), %rsi
100003f6c: e8 bf ff ff ff              	callq	0x100003f30 <_mult2>
100003f71: 48 89 45 e0                 	movq	%rax, -32(%rbp)
100003f75: 48 8b 4d e0                 	movq	-32(%rbp), %rcx
100003f79: 48 8b 45 e8                 	movq	-24(%rbp), %rax
100003f7d: 48 89 08                    	movq	%rcx, (%rax)
100003f80: 48 83 c4 20                 	addq	$32, %rsp
100003f84: 5d                          	popq	%rbp
100003f85: c3                          	retq

Disassembly of section __TEXT,__stubs:

0000000100003f86 <__stubs>:
100003f86: ff 25 84 00 00 00           	jmpq	*132(%rip)              ## 0x100004010 <dyld_stub_binder+0x100004010>

Disassembly of section __TEXT,__stub_helper:

0000000100003f8c <__stub_helper>:
100003f8c: 4c 8d 1d 6d 00 00 00        	leaq	109(%rip), %r11         ## 0x100004000 <dyld_stub_binder+0x100004000>
100003f93: 41 53                       	pushq	%r11
100003f95: ff 25 6d 00 00 00           	jmpq	*109(%rip)              ## 0x100004008 <dyld_stub_binder+0x100004008>
100003f9b: 90                          	nop
100003f9c: 68 00 00 00 00              	pushq	$0
100003fa1: e9 e6 ff ff ff              	jmp	0x100003f8c <__stub_helper>

class pandas.core.frame.DataFrame {
    // read
    DataFrame head(count)
    DataFrame drop(rowIndexList)
    pandas.core.indexing._LocIndexer loc    // index 검색
    pandas.core.indexing._iLocIndexer iloc  // 서수
    DataFrame reset_index(drop = False)
    void info()
    DataFrame isnull()
    DataFrame notnull()

    Series operator[](column)
    DataFrame operator[](columns)
    DataFrame operator[](Series<bool>)

    operator[](column str, value)
    operator[](, value)

    // keep: "first", "last", False
    Series duplicated(list columns_to_search = all_columns, keep = "first")
    DataFrame describe()
    DataFrame copy()

    // delete
    DataFrame drop_duplicates(list columns_to_search, keep = "first")

    - ffill(inplace)
    - bfill()
}

pandas.core.series.Series<T> {
    Series isin(list)
    Series isnull()
    Series notnull()
    Series operator<compare>()
    Series fillna()
    Series value_counts()
    T mean()

    - numpy.ndarray unique()
    - pandas.core.indexes.base.Index index()
}

pandas.core.groupby.generic.DataFrameGroupBy {
    DataFrame head(n = 5)
    describe(): x 축과 y 축에 대한 기초 통계를 출력한다
}

selenium.webdriver {
    + selenium.webdriver Chrome()
    - get(url str)
    - find_element(By.css_type, pattern str)
    - find_elements(pattern str)
}

selenium.webdriver.common.by.By {
    + By.css_type CSS_SELECTOR
}

selenium.webdriver.remote.webelement.WebElement {
    - get_attribute(attribute str)
    - click()
}

numpy.ndarray {
    - list tolist()
}

collections.Counter {
    - tuple list most_common(int)
}

set {
    + (numpy.ndarray)

    - -(set)
}
